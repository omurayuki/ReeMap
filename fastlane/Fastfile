require 'dotenv'
Dotenv.load

default_platform(:ios)

platform :ios do
PLIST_PATH = "./ReeMap/Info.plist"
BUNDLE_ID  = get_info_plist_value(path: PLIST_PATH, key: "CFBundleIdentifier")
VERSION    = get_info_plist_value(path: PLIST_PATH, key: "CFBundleShortVersionString")
BUILD      = get_info_plist_value(path: PLIST_PATH, key: "CFBundleVersion")

before_all do
	ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
	ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = "gyuz-vund-kqia-piws"
end

platform :ios do

	lane :setup do
		carthage(
			platform: "iOS"
		)
	end

	lane :test do
		scan(
			project: "ReeMap.xcodeproj",
			clean: true # テスト前にclean実行
		)
		slack
	end

	lane :release do
		increment_build_number # ビルドナンバーincrement
		capture_screenshots
		match( # 証明書生成, 取得action
			readonly: true # 証明書読み取りオンリー
		)
		sigh(
			force: false
		)
		gym( # アプリビルド
			project: "ReeMap.xcodeproj",
			configuration: "Release",
			scheme: "RELEASE",
			silent: true,
			clean: true,
			output_name: "ReeMap.ipa",
			export_options: {
				provisioningProfiles: {
					"com.gmail.g1221438.ReeMap" => "match AppStore com.gmail.g1221438.ReeMap"
				}
			}
		)
		deliver(
			force: true,
			metadata_path: "./metadata",
			automatic_release: true,
		)
		slack(
			message: "Successfully deployed to App Store Connect."
		)
	end

	lane :deploy_testflight do
		increment_build_number
		match( # 証明書生成, 取得action
			readonly: true # 証明書読み取りオンリー
		)
		sigh(
			force: false
		)
		gym( # アプリビルド
			project: "ReeMap.xcodeproj",
			configuration: "Release",
			scheme: "RELEASE",
			silent: true,
			clean: true,
			output_name: "ReeMap.ipa",
			export_options: {
				provisioningProfiles: {
					"com.gmail.g1221438.ReeMap" => "match AppStore com.gmail.g1221438.ReeMap"
				}
			}
		)
		upload_to_testflight()
		slack(
			message: "Successfully deployed to Test Flight."
		)
	end
end

after_all do |lane|
end

error do |lane, exception|
	next unless Helper.is_ci?
		slack(
			message: exception.message,
			success: false
		)
end
end
